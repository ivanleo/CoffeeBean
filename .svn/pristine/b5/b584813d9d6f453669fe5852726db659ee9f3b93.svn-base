/********************************************************************
    created:    2018/05/31
    created:    31:5:2018   11:26
    filename:   D:\Work\PushCoin\trunk\PushCoin\Assets\CoffeeBean\Data\CXmlData.cs
    file path:  D:\Work\PushCoin\trunk\PushCoin\Assets\CoffeeBean\Data
    file base:  CXmlData
    file ext:   cs
    author:     Leo

    purpose:    XML文件管理器
                负责XML文件的加载和缓存，方便使用
*********************************************************************/
using System;
using System.Collections.Generic;
using System.Xml.Linq;
using UnityEngine;

namespace CoffeeBean
{
    /// <summary>
    /// XML数据类
    /// </summary>
    public static class CXmlData
    {
        /// <summary>
        /// 数字数据
        /// </summary>
        private static Dictionary<string, float> m_NumData = new Dictionary<string, float>();

        /// <summary>
        /// float数据xml
        /// </summary>
        private const string FloatURL = "xml/Config_Number";

        /// <summary>
        /// 数字数据
        /// </summary>
        private static Dictionary<string, string> m_StringData = new Dictionary<string, string>();

        /// <summary>
        /// float数据xml
        /// </summary>
        private const string StringURL = "xml/Config_String";

        /// <summary>
        /// 初始化
        /// </summary>
        public static bool Init()
        {
            try
            {
                LoadNumData();
                LoadStringData();
                return true;
            }
            catch ( Exception ex )
            {
                CLOG.E ( ex.ToString() );
                return false;
            }
        }

        /// <summary>
        /// 加载数据资源
        /// </summary>
        private static void LoadNumData()
        {
            string data = Resources.Load ( FloatURL ).ToString();
            XDocument xml = XDocument.Parse ( data );

            XElement Root = xml.Element ( "root" );
            foreach ( XElement element in Root.Elements() )
            {
                string key = element.Name.ToString();
                float value = float.Parse ( element.Value );

                m_NumData.Add ( key, value );
            }

            CLOG.I ( "loading float xml data complete" );
        }

        /// <summary>
        /// 加载字符串资源
        /// </summary>
        private static void LoadStringData()
        {

            string data = Resources.Load ( StringURL ).ToString();
            XDocument xml = XDocument.Parse ( data );

            XElement Root = xml.Element ( "root" );
            foreach ( XElement element in Root.Elements() )
            {
                string key = element.Name.ToString();
                string value = element.Value;

                m_StringData.Add ( key, value );
            }

            CLOG.I ( "loading string xml data complete" );
        }

        /// <summary>
        /// 得到数字资源
        /// </summary>
        /// <param name="key">key</param>
        /// <returns>value</returns>
        public static float GetNum ( string key )
        {
            if ( m_NumData.ContainsKey ( key ) )
            {
                return m_NumData[key];
            }
            return 0.0f;
        }

        /// <summary>
        /// 得到字符串资源
        /// </summary>
        /// <param name="key"></param>
        /// <returns></returns>
        public static string GetStr ( string key )
        {
            if ( m_StringData.ContainsKey ( key ) )
            {
                return m_StringData[key];
            }
            return "## ╮(￣▽ ￣)╭ ##";
        }
    }
}